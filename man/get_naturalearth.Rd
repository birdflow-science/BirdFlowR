% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_naturalearth.R
\name{get_naturalearth}
\alias{get_naturalearth}
\alias{get_states}
\alias{get_coastline}
\alias{get_countries}
\title{Retrieve, crop, and transform Natural Earth data}
\usage{
get_naturalearth(
  x,
  type,
  scale = "medium",
  buffer = 15,
  keep_attributes = FALSE,
  country,
  keep_buffer = FALSE,
  force_old_method = FALSE,
  ...
)

get_states(
  x,
  country,
  scale = "medium",
  buffer = 15,
  keep_attributes = FALSE,
  keep_buffer = FALSE
)

get_coastline(
  x,
  scale = "medium",
  buffer = 15,
  keep_attributes = FALSE,
  keep_buffer = FALSE
)

get_countries(
  x,
  scale = "medium",
  buffer = 15,
  keep_attributes = FALSE,
  keep_buffer = FALSE
)
}
\arguments{
\item{x}{A BirdFlow, \link[terra:SpatRaster-class]{terra::SpatRaster},
\link[sf:st_as_sf]{sf}, or any other object
on which you can call \code{\link[terra:ext]{terra::ext()}} and \code{\link[terra:crs]{terra::crs()}}.}

\item{type}{The type of data to retrieve. One of "coastline", "country", or
"states" for data included in \pkg{rnaturalearth}; or any value accepted by
\link[rnaturalearth:ne_download]{ne_download()}.}

\item{scale}{The scale of data to return. Ignored if type is "states",
otherwise passed to one of \link[rnaturalearth:ne_download]{ne_download()}.
\link[rnaturalearth:ne_coastline]{ne_coastline()}, or
\link[rnaturalearth:ne_countries]{ne_countries()}.
Valid values are 110, 50, 10, 'small', 'medium', and 'large'.}

\item{buffer}{A buffer in degrees (latitude and longitude) to add to the
extent of \code{x} prior to cropping the Natural Earth data in WGS84. This is
needed so that after transformation to the CRS of \code{x} the data cover all
of the extent of \code{x}.}

\item{keep_attributes}{If \code{FALSE}, the default, attribute columns are dropped
to facilitate clean plotting.}

\item{country}{If retrieving states with \code{get_states()} or
\code{get_naturalearth(type = "states")} this is used to select a country. If
omitted, states from all countries are returned.}

\item{keep_buffer}{If \code{FALSE}, the default, after transforming the Natural
Earth data it will cropped to the precise extent of \code{x}. Set to  \code{TRUE}
to keep the buffer - useful when overlaying Natural Earth data
on an existing base R plot.}

\item{force_old_method}{This is for internal testing. The default should be
best for all other uses.  If \code{TRUE} use the back transformed bounding box
method even if the projection is covered by the "new" cut at seam method.}

\item{...}{Other arguments to be passed to
\link[rnaturalearth:ne_download]{ne_download()}. Possibly you will
want to use \code{category = "physical"}.}
}
\value{
\link[sf:sf]{sf} object with Natural Earth data in the same
CRS as \code{x}.
}
\description{
These are convenience wrappers to \pkg{rnaturalearth} functions. They
retrieve, crop, format, and project
\href{https://www.naturalearthdata.com/}{Natural Earth}
data to facilitate plotting with
BirdFlow and other spatial objects. The output is the desired data in the
same coordinate reference system (CRS) and extent as \code{x}.
}
\details{
\code{get_naturalearth()} does all the work and is called by the other functions.
There are two distinct calculation methods.
\enumerate{
\item For Mollweide, Lambert Azimuthal Equal Area,  Albers Equal Area, and
Lambert Conformal Conic projections cut at the seam:
\itemize{
\item Find the longitude of projection center ("lon_0" in proj4 string) and
from it determine longitude of the seam.
\item Clip a narrow (1 m) strip out of the Natural Earth data before
transforming (in WGS84) at the seam.
\item Transform to the CRS of \code{x}. This is now an artifact free object
containing the global data set minus a narrow strip at the seam.
\item Crop in destination to the extent of \code{x}, or if \code{keep_buffer = TRUE},
the extent plus the approximate equivalent of \code{buffer}.
}

This should work well for any extent (including global) in any CRS that is
based on the covered projections.
\item For all other projections back transform the bounding box and clip:
\itemize{
\item Convert the corners of the bounds of \code{x} object to WGS84.
\item adds a buffer (\code{buffer}) to the converted corners this is important to
guarantee that we still cover the extent after we transform.
\item Check to see if the bounds wrap the seam (180 deg meridian) and break
the bounding box into two if it does.
\item Crop to the bounding box or boxes.
\item Project each cropped section to \code{x}'s CRS.
\item Combine the pieces into one object.
\item If \code{keep_buffer = FALSE} crop to the exact extent of \code{x}.
}

These steps will usually prevent artifacts caused when polygons or lines
are shifted across the bounds of the CRS. However, it does not work for
all extents in all projections and in particular is unlikely to work with
polar projections and with extents that cover the entire globe.

In some cases where this fails setting the buffer to zero may be an easy
solution.

There are many more projections where method 1 or a variant on it
would work. We may eventually cover more of those projections with the
first method.

If you encounter a use case that doesn't work you may
\href{https://github.com/birdflow-science/BirdFlowR/issues}{submit an issue};
please include the output from \code{crs(x)} and \code{ext(x)}.
}

\code{get_states()} requires \pkg{rnaturalearthhires}. Install with:\cr
\code{ install.packages("devtools") # if you don't have it already
 devtools::install_github("ropensci/rnaturalearthhires") }
}
\examples{
 bf <- BirdFlowModels::amewoo
 coast <- get_coastline(bf)

 \dontrun{
 library(terra)
 library(sf)
 plot(rast(bf, 1))
 plot(coast, add = TRUE)   }
}
