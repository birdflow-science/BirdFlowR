% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lookup_timestep_sequence.R
\name{lookup_timestep_sequence}
\alias{lookup_timestep_sequence}
\title{Lookup a sequence of timesteps}
\usage{
lookup_timestep_sequence(x, start, end, direction, buffer)
}
\arguments{
\item{x}{A BirdFlow object}

\item{start, end}{The starting and ending points in time specified as
\code{timesteps}, dates as characters or date objects, or if  \code{end} is omitted
start may be set to "all" or a season name to be interpreted by
\code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}}.}

\item{direction}{Either "forward" or "backward".  Determines direction if
\code{start} and \code{end} are timesteps (numeric), or \code{start} is "all" or a season.
If \code{start} and \code{end} represent dates and \code{direction} is used an error will
be thrown if \code{direction} isn't consistent with direction implied by the
dates.  If \code{start} and \code{end} do not represent dates then \code{direction} will
default to "forward".}

\item{buffer}{Only used if \code{start} is a season. A number of
timesteps to extend the season by. It is passed to
\code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}} and defaults to 1.}
}
\value{
An integer sequence of timesteps.
}
\description{
\code{lookup_timestep_sequence()} returns an ordered vector of timesteps possibly
crossing over the year boundary.
}
\details{
\code{start} and \code{end} will fall into one of three categories which are treated
differently:
\enumerate{
\item If \code{start} and \code{end} are numeric than they are treated as timesteps and
\code{direction} is used to route either forward (default) or backwards between
them, possibly passing over the year boundary.
\item If \code{start} and \code{end} are date objects or both characters they are
treated as dates, and the direction is determined from the dates:"forward"
if in chronological order, "backwards" otherwise.  If the \code{direction}
argument is used along with date input and it is not consistent with the
implicit direction from the dates, than an error will be thrown.
\item If \code{start} is a character and \code{end} is missing than it is assumed that
\code{start} is a key word that is either "all" for all timesteps, or a season
name. Season names are passed to \code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}} along with
\code{buffer}. \code{direction} will be followed and will default to "forward".
}
}
\examples{
bf <- BirdFlowModels::rewbla

# Using timesteps - direction defaults to "forward"
lookup_timestep_sequence(bf, 50, 3)  # c(50:52, 1:3)
lookup_timestep_sequence(bf, 50, 3, direction = "backward") # 50:3

# Using dates - order of dates determines direction
lookup_timestep_sequence(bf, "2023-12-1", "2024-01-20")
lookup_timestep_sequence(bf, "2024-01-20", "2023-12-1")

# "all" - direction defaults to "forward"
lookup_timestep_sequence(bf, "all")
lookup_timestep_sequence(bf, "all", direction = "backward")

# Season - direction defaults to "forward", buffer defaults to 1
lookup_timestep_sequence(bf, "prebreeding_migration")
lookup_timestep_sequence(bf, "prebreeding_migration",
                         buffer = 0, direction = "backward")

}
