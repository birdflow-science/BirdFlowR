% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animate_movement_vectors.R
\name{animate_movement_vectors}
\alias{animate_movement_vectors}
\title{Animate movement vectors}
\usage{
animate_movement_vectors(bf, start = "all", ...)
}
\arguments{
\item{bf}{a BirdFlow object}

\item{start}{The starting points in time specified as
timesteps, character dates, or date objects; or  may be set to "all" or a
season name to be interpreted by \code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}}.}

\item{...}{
  Arguments passed on to \code{\link[=lookup_timestep_sequence]{lookup_timestep_sequence}}
  \describe{
    \item{\code{end}}{If start is a timestep or date \code{end} should be a timestep or date
indicating the ending point in time.}
    \item{\code{direction}}{Either "forward" or "backward".

If \code{start} and \code{end}
represent dates and \code{direction} is used an error will
be thrown if \code{direction} isn't consistent with direction indicated by the
dates.

If \code{start} and \code{end} are not dates, \code{direction} defaults to "forward" and
\code{start} and \code{end} should either both be timesteps (numeric); or
\code{end} should be omitted and start should be "all" or a season name.

If \code{start} is a timestep or date, \code{end} is omitted, and \code{n} is an integer
than \code{direction} defaults to "forward".}
    \item{\code{season_buffer}}{Only used if \code{start} is a season. \code{season_buffer} is
passed to \code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}} and defaults to 1; it is the number
of timesteps to extend the season by at each end.}
    \item{\code{n}}{Alternative to \code{end} for specifying when a sequence should end.
\code{n} indicates how many transitions should be in the sequence in \code{direction}
which defaults to "forward" if \code{n} is used.  The sequence will have \code{n + 1}
timesteps.}
  }}
}
\value{
a \code{gganim} object. \code{print()} will plot it with default
options, or use \code{\link[=animate]{animate()}} to set the options. See the example for
recommended settings.
}
\description{
\code{animate_movement_vectors()} produces a \code{gganim} object in which each frame
is a map of vectors showing the average modeled movement for all birds from
each cell in the landscape at a given timestep. It is analogous to a series
of images created with \code{\link[=plot_movement_vectors]{plot_movement_vectors()}}.
}
\details{
Each arrow represents the average of all the transitions from a single cell.
The tail of the arrow is the center of that cell, the head is the average
location at the following timestep for birds that start at that cell.

The timestep and/or date label is the starting timestep for the transition
that is displayed and the format depends on
\link[=birdflow_options]{birdflow_options("time_format")}

Thicker lines and less transparency (darker shading) indicate higher density
in the eBird S&T distribution for the beginning timestep of the displayed
transition.

I'm undecided as to whether the \code{gganimate()} call from the example
should be part of the function, making it return a "gif_image" object
instead. It would make it easier to use but hard to adjust the rendering
parameters. The output object might change in a future revision.
}
\examples{

bf <- BirdFlowModels::amewoo
a <- animate_movement_vectors(bf)

\dontrun{

# Animate, display, and save
#   Note: "ragg_png" is considerably faster and produces cleaner output than
#         the default device.
gif <- gganimate::animate(a, fps = 1, device = "ragg_png",
                          width = 6, height = 5,
                          res = 150, units = "in")
print(gif)

# Save
gif_file <- tempfile("animation", fileext = ".gif")
gganimate::save_animation(gif, gif_file)
file.remove(gif_file) # cleanup
}

}
