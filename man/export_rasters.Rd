% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_rasters.R
\name{export_rasters}
\alias{export_rasters}
\title{export distributions and masks from a BirdFlow object to raster files.}
\usage{
export_rasters(
  bf,
  dir,
  crs = NULL,
  multiband = !singleband,
  singleband = TRUE,
  what = c("distr", "mask"),
  filetype = "GTiff",
  as_integer = NULL,
  factor = NULL,
  overwrite = TRUE,
  mb_file = "<code>_<what>.<ext>",
  sb_file = "<code>_<what>_<p_ts>.<ext>"
)
}
\arguments{
\item{bf}{A BirdFlow object}

\item{dir}{The directory where output should be stored. Can include
aliases; see \code{mb_file},\code{sb_file} below.}

\item{crs}{The coordinate reference system to use in the output files,
defaults to  \code{crs(bf)}}

\item{multiband}{If \code{TRUE} export a multiband file. Will be forced to \code{FALSE}
if the \code{filetype} doesn't support multiband rasters.}

\item{singleband}{If \code{TRUE} export separate files for each week in the model.
Will be forced to \code{TRUE}}

\item{what}{Either \code{"distr"}, \code{"mask"} or both as a two element vector.
\code{what} controls what components of \code{bf} are
exported.}

\item{filetype}{The file type to export: \code{"GTiff"} for GeoTIFF files,
or \code{"PNG"} for Portable Network Graphics.}

\item{as_integer}{Should the data be written as integers. With the default,
\code{NULL}, integers will be written for the PNG file type as they don't
support real numbers and with GeoTIFFs floating point numbers
will be written.}

\item{factor}{To create integer output (\code{as_integer = TRUE}) the floating
point distributions will be multiplied by this number prior to output. If
\code{factor} is \code{NULL} (the default) then the factor will be x / the maximum
value in any distribution in \code{bf}, where x is 255 for \code{PNG}
filetypes and 1000 for \code{GTiff}.  Thus the maximum integer value will be 255
for PNG files, and 1000 for GeoTIFF files.}

\item{overwrite}{Should pre-existing files be overwritten with new output.}

\item{mb_file, sb_file, }{The multi-band and single-band file name templates.
They control where files are written. Possible aliases are:
\itemize{
\item \verb{<ext>} the file extension, required at end of template.
\item \verb{<code>} the species code.
\item \verb{<common>} the species common name, spaces will be replaced with \code{"_"}
\item \verb{<scientific>} the scientific name, spaces will be replaced with \code{"_"}
\item \verb{<ts>} timestep (without padding)
\item \verb{<p_ts>} padded timestep e.g. \code{"03"}
\item \verb{<date>} date in format \code{year-month-day}  e.g. \code{"2024-03-14"}
\item \verb{<what>} will be one of "distr" or "mask" can be omitted if only one
is to be output.  See \code{what} argument above.
}

The two metadata files (CRS, extent) are written using the
multi-band template with \verb{<what>} set
to \code{"crs"} and  \code{"extent"}, unless \verb{<what>} isn't in the file name
in which case \code{"_crs"} and \code{"_extent"} will be inserted prior to the
extension.

\code{sb_file} must include one of \verb{<ts>}, \verb{<p_ts>} or \verb{<date>}.

The aliases above may be used in \code{dir} as well.}
}
\value{
Nothing is returned, but raster files are written to \code{dir}
}
\description{
This function exports the distributions and/or dynamic masks from a
BirdFlow object to raster files (TIFF, PNG).
}
\details{
This replaces and extends the old behavior of \code{\link[=preprocess_species]{preprocess_species()}} which
allowed exporting TIFF files of the distributions while preprocessing.

Files are written via \link[terra:writeRaster]{terra::writeRaster} but the data is manipulated prior
to export, in particular if \code{as_integer} is \code{TRUE} or if the filetype only
supports integers than the distribution data which is normally between 0 and
1 is stretched and then converted to integer.  The amount of stretching can
be controlled with \code{factor}. \code{as_integer} will be set automatically to TRUE
for formats that only export integers  (\code{PGN}) and \code{multiband}
and \code{singleband} will be set to \code{FALSE} and \code{TRUE} respectively for
formats that only support single band output (\code{PNG}).  If the \code{filetype}
supports multiband files than it is possible to export both multiband and
single band by setting both arguments to \code{TRUE}.
}
\examples{
\dontrun{
  bf <- load_model("amewoo_prebreeding")
  dir <- tempdir()
  crs <-"EPSG:4326"
  export_tifs(bf, dir = dir, singleband = TRUE, crs = crs)
  export_tifs(bf, dir = dir, singleband = TRUE, crs = crs, filetype = "PNG")

}

}
\keyword{internal}
