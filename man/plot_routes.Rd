% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_routes.R
\name{plot_routes}
\alias{plot_routes}
\alias{plot.BirdFlowRoutes}
\title{Plot Routes}
\usage{
plot_routes(
  routes,
  bf,
  facet = FALSE,
  max_stay_len = NULL,
  use_seasonal_colors = TRUE,
  pal = NULL,
  barheight = 8,
  route_linewidth = 0.85,
  dot_sizes = c(1.1, 3.5),
  coast_linewidth = 0.25,
  stay_units = "weeks",
  show_mask = TRUE,
  crs = NULL,
  static = TRUE
)

\method{plot}{BirdFlowRoutes}(x, ...)
}
\arguments{
\item{routes, x}{An object of class \code{Routes} or  \code{BirdFlowRoutes}.  Likely the
the output of  \code{\link[=route]{route()}}, \link{as_BirdFlowRoutes}, or \code{\link[=Routes]{Routes()}}.}

\item{bf}{A BirdFlow object. Only used if \code{x} is a \code{Routes} object, in
which case it provides the CRS and}

\item{facet}{If \code{TRUE} then use \code{\link[ggplot2:facet_wrap]{ggplot2::facet_wrap()}} to show each route
out into a separate subplot.}

\item{max_stay_len}{Used to scale the stay length dots. If \code{NULL}
(the default) it will be set to the maximum \code{"stay_len"} value in \code{routes}.
Set it manually to keep the dot scaling consistent across multiple plots.}

\item{use_seasonal_colors}{If \code{TRUE} a color scale that uses blues, greens,
yellows, reds, for winter, spring, summer, and fall will be used with a
consistent mapping of dates to colors regardless of the range of dates
plotted. If \code{FALSE} then the data will be plotted using the full color scale.}

\item{pal}{The color palette to use for plotting when \code{use_seasonal_cols} is
\code{FALSE}. Defaults to \link[viridisLite:viridis]{viridisLite::viridis(n = 5)}.}

\item{barheight}{The height of the color gradient legend bar. Passed to
\code{\link[ggplot2:guide_colourbar]{ggplot2::guide_colorbar()}} as \code{barheight} argument. Depending on the output
resolution and plot size this may need to be adjusted. Can take a number or
the output from \code{\link[ggplot2:reexports]{ggplot2::unit()}}.}

\item{route_linewidth}{Line width used for routes.}

\item{dot_sizes}{Two numbers indicating the smallest and largest dot sizes
used to represent stay length.}

\item{coast_linewidth}{Line width used for coastlines.}

\item{stay_units}{The unit to plot the stay length at each location. Default
to \code{weeks}. Other options include \code{sec}, \code{mins}, \code{hours}, \code{days} and \code{weeks}.}

\item{show_mask}{Should the BirdFlow Model's (\code{bf}) static mask be displayed.}

\item{crs}{Only used when \code{bf} is missing.  \code{crs} sets the Coordinate
Reference system used for plotting. See \code{\link[terra:crs]{terra::crs()}}.}

\item{static}{For internal use. It is set to \code{FALSE} when \code{plot_routes()} is
called from \code{\link[=animate_routes]{animate_routes()}}.}

\item{...}{Passed to \code{plot_routes()} from \code{plot()} for \code{Route} and
\code{BirdFlowRoutes} objects.}
}
\value{
A ggplot object. Use \code{\link[=print]{print()}} to display it.
}
\description{
Plot \code{Routes} and \code{BirdFlowRoutes} objects as as lines with color indicating
the passage of time. For \code{BirdFlowRoutes} the end point of each week
is shown as a dot and the size of the dot corresponds to how long the birds
stayed at that location.
}
\details{
\code{plot.BirdFlowRoutes()} calls \code{plot_routes()}.
}
\examples{
bf <- BirdFlowModels::amewoo
n <- 10
rts <- route(bf, n, season = "prebreeding")

# Multiple routes on one plot
plot_routes(rts, bf)

# One panel per route
new_rts <- rts
new_rts$data <- new_rts$data[new_rts$data$route_id \%in\% 1:4, ]
plot_routes(new_rts, bf, facet = TRUE)

# Returned plot object can be edited
# Here we change the title and add an additional sf
# layer with country boundaries
library(ggplot2)
p <- plot_routes(rts, bf) +
  ggtitle(paste0(species(bf), " (with countries)")) +
  geom_sf(data = get_countries(bf), inherit.aes = FALSE, fill = NA) +
  coord_sf(expand = FALSE)
p
\dontrun{
# Use alternate color palettes
plot_routes(rts, bf, use_seasonal_colors = FALSE)

plot_routes(rts, bf,
  use_seasonal_colors = FALSE,
  pal = c("red", "yellow", "blue")
)
}
}
