% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/route.R
\name{route}
\alias{route}
\title{Generate BirdFlow routes}
\usage{
route(x, x_coord, y_coord, n, row, col, start, end, direction, season_buffer)
}
\arguments{
\item{x}{A BirdFlow object}

\item{x_coord, y_coord}{One or more sets of coordinates identifying starting
positions.}

\item{n}{Optional, if provided each starting position will be duplicated this
many times. \code{n} can be a single integer or a vector with one integer per
starting position.}

\item{row, col}{One or more row and column indices to begin routing from.
These are an alternative to \code{x_coord} and \code{y_coord} and both sets of
parameters should not be used at the same time.}

\item{start}{The starting points in time specified as
timesteps, character dates, or date objects; or  may be set to "all" or a
season name to be interpreted by \code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}}.}

\item{end}{If start is a timestep or date \code{end} should be a timestep or date
indicating the ending point in time.}

\item{direction}{Either "forward" or "backward".

If \code{start} and \code{end}
represent dates and \code{direction} is used an error will
be thrown if \code{direction} isn't consistent with direction indicated by the
dates.

If \code{start} and \code{end} are not dates, \code{direction} defaults to "forward" and
\code{start} and \code{end} should either both be timesteps (numeric); or
\code{end} should be omitted and start should be "all" or a season name.}

\item{season_buffer}{Only used if \code{start} is a season. \code{season_buffer} is
passed to \code{\link[=lookup_season_timesteps]{lookup_season_timesteps()}} and defaults to 1; it is the number
of timesteps to extend the season by at each end.}
}
\value{
This will likely change. Currently returns a list with:
\item{points}{A data.frame with coordinates, date, and route id}
\item{lines}{a \link[sf:sf]{sf} object containing one line per route.}
}
\description{
route() projects bird positions over time based on the probabilities
embedded in a BirdFlow model. The output is linear, stochastic routes.
}
